local M = {}

local palette = require("eyes.palette").palette
local utility = require("eyes.utility")
local hl = utility.hl

M.dashboard = function()
	hl("SnacksDashboardNormal", "Normal")
	hl("SnacksDashboardHeader", { fg = "fg" })
	hl("SnacksDashboardFooter", { fg = "fg" })
	hl("SnacksDashboardTitle", "Title")
	hl("SnacksDashboardTerminal", "None")
	hl("SnacksDashboardIcon", "Icon")
	hl("SnacksDashboardDesc", { fg = "fg" })
	hl("SnacksDashboardKey", "Mute")
	hl("SnacksDashboardDir", "Directory")
	hl("SnacksDashboardFile", { fg = "fg" })
	hl("SnacksDashboardMute", "Special")
end

M.indent = function()
	hl("SnacksIndent", { fg = palette.hex03 })
	hl("SnacksIndent1", { fg = palette.hex01 })
	hl("SnacksIndent2", { fg = palette.hex02 })
	hl("SnacksIndent3", { fg = palette.hex03 })
	hl("SnacksIndent4", { fg = palette.hex04 })
	hl("SnacksIndent5", { fg = palette.hex05 })
	hl("SnacksIndent6", { fg = palette.hex06 })
	hl("SnacksIndent7", { fg = palette.hex07 })
	hl("SnacksIndent8", { fg = palette.hex08 })
	hl("SnacksIndentBlank", "Dim")
	hl("SnacksIndentChunk", "Mute")
	hl("SnacksIndentScope", "Mute")
end

M.input = function()
	hl("SnacksInputNormal", "Normal")
	hl("SnacksInputBorder", "Border")
	hl("SnacksInputTitle", "Title")
	hl("SnacksInputPrompt", "SnacksInputTitle")
	hl("SnacksInputIcon", "Icon")
end

M.picker = function()
	hl("SnacksPicker", "NormalFloat")
	hl("SnacksPickerTitle", "FloatTitle")
	hl("SnacksPickerBorder", "FloatBorder")
	hl("SnacksPickerFooter", "FloatFooter")
	hl("SnacksPickerCursorLine", "CursorLine")

	hl("SnacksPickerInput", "SnacksPicker")
	hl("SnacksPickerInputTitle", "SnacksPickerTitle")
	hl("SnacksPickerInputBorder", "SnacksPickerBorder")
	hl("SnacksPickerInputFooter", "SnacksPickerFooter")
	hl("SnacksPickerInputCursorLine", "SnacksPickerCursorLine")
	hl("SnacksPickerInputSearch", "Search")
	hl("SnacksPickerPrompt", "Mute")

	hl("SnacksPickerPreview", "SnacksPicker")
	hl("SnacksPickerPreviewTitle", "SnacksPickerTitle")
	hl("SnacksPickerPreviewBorder", "SnacksPickerBorder")
	hl("SnacksPickerPreviewFooter", "SnacksPickerFooter")
	hl("SnacksPickerPreviewCursorLine", "SnacksPickerCursorLine")

	hl("SnacksPickerList", "SnacksPicker")
	hl("SnacksPickerListTitle", "SnacksPickerTitle")
	hl("SnacksPickerListBorder", "SnacksPickerBorder")
	hl("SnacksPickerListFooter", "SnacksPickerFooter")
	hl("SnacksPickerListCursorLine", "SnacksPickerCursorLine")

	hl("SnacksPickerBox", "SnacksPicker")
	hl("SnacksPickerBoxTitle", "SnacksPickerTitle")
	hl("SnacksPickerBoxBorder", "SnacksPickerBorder")
	hl("SnacksPickerBoxFooter", "SnacksPickerFooter")
	hl("SnacksPickerBoxCursorLine", "SnacksPickerCursorLine")

	hl("SnacksPickerSelected", { fg = "fg" })
	hl("SnacksPickerSpinner", "Dim")
	hl("SnacksPickerTotals", "Dim")
	hl("SnacksPickerSearch", "Search")
	hl("SnacksPickerMatch", "PmenuMatch")
	hl("SnacksPickerIndent", "Dim")
	hl("SnacksPickerRow", "Mute")
	hl("SnacksPickerCol", "Mute")
	hl("SnacksPickerIdx", "Mute")
	hl("SnacksPickerRegister", "Mute")
	hl("SnacksPickerLabel", "Mute")
	hl("SnacksPickerCode", "@markup.raw.markdown_inline")

	hl("SnacksPickerBold", "Bold")
	hl("SnacksPickerComment", "Comment")
	hl("SnacksPickerDelim", "Delimiter")
	hl("SnacksPickerDimmed", "Dim")
	hl("SnacksPickerItalic", "Italic")
	hl("SnacksPickerMute", "Special")

	hl("SnacksPickerDir", "Directory")
	hl("SnacksPickerFile", { fg = "fg" })

	hl("SnacksPickerBufNr", "Mute")
	hl("SnacksPickerBufFlags", "Mute")

	hl("SnacksPickerAuEvent", "Mute")
	hl("SnacksPickerAuPattern", "Mute")
	hl("SnacksPickerAuGroup", { fg = "fg" })

	hl("SnacksPickerKeymapLhs", "Mute")
	hl("SnacksPickerKeymapMode", "Mute")
	hl("SnacksPickerKeymapRhs", "Mute")

	hl("SnacksPickerManPage", "Mute")
	hl("SnacksPickerManSection", "Mute")

	hl("SnacksPickerDiagnosticCode", "Mute")
	hl("SnacksPickerDiagnosticSource", "Dim")

	hl("SnacksPickerGitBreaking", "Error")
	hl("SnacksPickerGitCommit", "Mute")
	hl("SnacksPickerGitDate", "Mute")
	hl("SnacksPickerGitIssue", "Mute")
	hl("SnacksPickerGitScope", "Italic")
	hl("SnacksPickerGitType", "Bold")

	hl("SnacksPickerGitStatus", "Changed")
	hl("SnacksPickerGitStatusAdded", "Added")
	hl("SnacksPickerGitStatusModified", "Changed")
	hl("SnacksPickerGitStatusCopied", "Changed")
	hl("SnacksPickerGitStatusUntracked", "Changed")
	hl("SnacksPickerGitStatusRenamed", "Changed")
	hl("SnacksPickerGitStatusDeleted", "Removed")

	hl("SnacksPickerIconArray", "Icon")
	hl("SnacksPickerIconBoolean", "Icon")
	hl("SnacksPickerIconClass", "Icon")
	hl("SnacksPickerIconConstant", "Icon")
	hl("SnacksPickerIconConstructor", "Icon")
	hl("SnacksPickerIconEnum", "Icon")
	hl("SnacksPickerIconEnumMember", "Icon")
	hl("SnacksPickerIconEvent", "Icon")
	hl("SnacksPickerIconField", "Icon")
	hl("SnacksPickerIconFile", "Icon")
	hl("SnacksPickerIconFunction", "Icon")
	hl("SnacksPickerIconInterface", "Icon")
	hl("SnacksPickerIconKey", "Icon")
	hl("SnacksPickerIconMethod", "Icon")
	hl("SnacksPickerIconModule", "Icon")
	hl("SnacksPickerIconNamespace", "Icon")
	hl("SnacksPickerIconNull", "Icon")
	hl("SnacksPickerIconNumber", "Icon")
	hl("SnacksPickerIconObject", "Icon")
	hl("SnacksPickerIconOperator", "Icon")
	hl("SnacksPickerIconPackage", "Icon")
	hl("SnacksPickerIconProperty", "Icon")
	hl("SnacksPickerIconString", "Icon")
	hl("SnacksPickerIconStruct", "Icon")
	hl("SnacksPickerIconTypeParameter", "Icon")
	hl("SnacksPickerIconVariable", "Icon")
end

M.setup = function()
	M.dashboard()
	M.indent()
	M.input()
	M.picker()
end

return M
